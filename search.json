[
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html",
    "title": "The Goal",
    "section": "",
    "text": "I want to look at individual contributions to political campaigns just prior to the 2020 presidential election made by people on Long Island. Money is interesting, because there’s a reason that we say “put your money where your mouth is”.\nThere’s also, as we’ll see, a lot you can learn from the data on its own. It contains things like Occupation and Employer that are just interesting in their own right. We could use it, for instance, to find employers and contacts that we might be interested in. Here’s an example record:",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html#the-problem",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html#the-problem",
    "title": "The Goal",
    "section": "The Problem",
    "text": "The Problem\nThe files for 2020 are large - 9GB uncompressed, 18GB compressed. Some large percentage of this data is not really useful for my purpose, and I have to figure out a way to keep only what I need. Filtering on NY is possible, but as I know already and found out even more so as part of this little project, NY is really, really big and very politically active. So, we want to restrict even within NY, to Long Island. But, how should we do that?\nWe don’t want to use the CITY data because one person’s Bellmore is another person’s North Bellmore (that is, there’s really only one if you don’t live there!). Also, NY is big enough to have two towns with the same name in different counties (Tuckahoe, NY for example!).\nZip codes are more reliable indicators, but then we face a different problem - how do we know which zip codes are on Long Island?",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html#the-gameplan",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html#the-gameplan",
    "title": "The Goal",
    "section": "The Gameplan",
    "text": "The Gameplan\n\nGet a list of zip codes that are contained within Long Island (defined as Nassau and Suffolk counties).\nFilter the FEC data using our list of zip codes.\nAnalyze the Long Island FEC data.\n\nWe start with a list of Zip Codes for the entire US, downloaded from the USPS. We’ll geocode this list of zip codes using the open source Nominatim geocoder, and use polygons for Nassau and Suffolk counties to retrieve only the zip codes we need.",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html#geocoding",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html#geocoding",
    "title": "The Goal",
    "section": "Geocoding",
    "text": "Geocoding\nGeocoding is the process of transforming an address or other geographic information entered by a user into geographical coordinates. We do it so often nowadays that we don’t even think about what a wonderful thing it is! Every time we type an address into Google Maps to get directions, we are using a geocoder.\nGeocoding is also a computationally expensive process, and we have a large number of zip codes (just over 2000 in NY state) that we want to geocode. We’ll do this cheaply by using Nominatim, which is the geocoder used by OpenStreetMaps. Building and installing Nominatim locally is an involved process, but we can sidestep it and just use Nominatim in a Docker container. We can follow the instructions here to build and run a Docker instance of Nominatim:\nhttps://www.linkedin.com/pulse/geocoding-geopy-your-own-nominatim-server-chonghua-yin/?trk=related_artice_Geocoding%20with%20GeoPy%20and%20Your%20Own%20Nominatim%20Server_article-card_title\nWe could interact with this instance directly using http requests, but we’ll use geopy instead. This library allows us to switch geocoders based on the purpose we have in mind, and also allows us to implement rate limiters if the geocoding service requires it. As we’re using our local copy we don’t have to worry about that, but if you were to use OSM’s geocoder directly, be polite!\n\n\nCode\nfrom geopy.geocoders import Nominatim\ngeocoder = Nominatim(domain=\"localhost:8080\", scheme=\"http\")\n\n\nWe test it by geocoding the North Bellmore Library!\n\n\nCode\ngeocoder.geocode(\"North Bellmore Library\")\n\n\nLocation(Public Library, 1551, Newbridge Road, North Bellmore, Town of Hempstead, Nassau County, 11710, United States, (40.6831165, -73.53970382629029, 0.0))",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html#processing-long-island-zip-codes",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html#processing-long-island-zip-codes",
    "title": "The Goal",
    "section": "Processing Long Island Zip Codes",
    "text": "Processing Long Island Zip Codes\nWe have a list of zip codes provided by the United States Postal Service, for the entire country.\n\n\nCode\nimport pandas as pd\nzip_codes_df = pd.read_excel(\"../references/ZIP_Locale_Detail.xls\", sheet_name=0)\n\n\nWe can filter on PHYSICAL STATE to get only the zip codes in NY.\n\n\nCode\nny_zip_codes_df = zip_codes_df[zip_codes_df[\"PHYSICAL STATE\"]==\"NY\"].copy()\n\n\nAmusingly, there is one zip code that is physically in NY but serviced as part of Connecticut. This is Fisher’s Island, which is in the Sound but whose ferry service is from Connecticut. The more you know!\n\n\nCode\nny_zip_codes_df[\"DISTRICT NAME\"].value_counts()\n\n\nDISTRICT NAME\nNEW YORK 3     1756\nNEW YORK 2      309\nNEW YORK 1      208\nCONNECTICUT       1\nName: count, dtype: int64",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/1.0-daveg-long-island-zipcodes.html#shapefiles-and-geopandas",
    "href": "notebooks/1.0-daveg-long-island-zipcodes.html#shapefiles-and-geopandas",
    "title": "The Goal",
    "section": "Shapefiles and GeoPandas",
    "text": "Shapefiles and GeoPandas\nWe are interested primarily in Nassau and Suffolk counties. Happily, NYS has the boundaries of those counties available to us in Shapefile format. Shapefiles are a data format originally created by ESRI, makers of ArcGIS software. It caught on as a popular format for exchanging spatial data. Many other formats are available now - GeoJSON is particularly popular now - but Shapefiles are everywhere, particularly for government data. New York State maintains a GIS clearinghouse with all kinds of useful assets, including polygon representations of all its counties. We use this file to select the spatial definitions for Nassau and Suffolk counties.\nWe also use the GeoPandas library, which lets us turn the shapefiles into Pandas dataframes with a special Geometry column that we can use in spatial operations.\n\n\nCode\nimport geopandas as gpd\ncounties_gdf = gpd.read_file(\"../references/shapefiles/Counties.shp\")\n\n\nAlso happily, the names are spelled the way we expect. We use GeoPandas to project the county polygons into WGS84, a system that uses latitude and longitude. We need to use the same coordinate system for the counties and the zipcodes we will work with below.\n\n\nCode\nlong_island_gdf = counties_gdf[counties_gdf.NAME.isin([\"Nassau\",\"Suffolk\"])].copy()\nlong_island_gdf = long_island_gdf.to_crs(4326)\nlong_island_gdf\n\n\n\n\n\n\n\n\n\nNAME\nABBREV\nGNIS_ID\nFIPS_CODE\nSWIS\nNYSP_ZONE\nPOP1990\nPOP2000\nPOP2010\nPOP2020\nDOS_LL\nDOSLL_DATE\nNYC\nCALC_SQ_MI\nDATEMOD\nShape_Leng\nShape_Area\ngeometry\n\n\n\n\n29\nNassau\nNASS\n974128\n36059\n280000\nLong Island\n1287348\n1334544\n1339532\n1395774\nNaN\nNaN\nN\n446.637468\n2018-04-12\n168031.844843\n1.156786e+09\nPOLYGON ((-73.42898 40.97791, -73.42934 40.940...\n\n\n51\nSuffolk\nSUFF\n974149\n36103\n470000\nLong Island\n1321864\n1419369\n1493350\n1525920\nNaN\nNaN\nN\n2372.634185\nNaN\n385044.837960\n6.145094e+09\nPOLYGON ((-72.13717 40.90804, -72.15988 40.899...\n\n\n\n\n\n\n\nAs mentioned above, geocoding is expensive and we don’t want to do it unnecessarily. There is duplication in the file we received from the USPS. For instance, there are two post offices in Bellmore, one north and one south, but Bellmore only has one zip code (11710). There’s no point to calling the same operation twice.\n\n\nCode\nny_zip_codes_df[ny_zip_codes_df[\"PHYSICAL ZIP\"]==11710]\n\n\n\n\n\n\n\n\n\nAREA NAME\nAREA CODE\nDISTRICT NAME\nDISTRICT NO\nDELIVERY ZIPCODE\nLOCALE NAME\nPHYSICAL DELV ADDR\nPHYSICAL CITY\nPHYSICAL STATE\nPHYSICAL ZIP\nPHYSICAL ZIP 4\n\n\n\n\n4290\nATLANTIC\n4B\nNEW YORK 2\n117\n11710\nBELLMORE\n2611 MERRICK RD\nBELLMORE\nNY\n11710\n5752.0\n\n\n4291\nATLANTIC\n4B\nNEW YORK 2\n117\n11710\nNORTH BELLMORE\n2465 JERUSALEM AVE\nNORTH BELLMORE\nNY\n11710\n9991.0\n\n\n\n\n\n\n\nJust for fun, I tested it with my own town. The location given appears to be the geometric center of Bellmore, rather than the address of one of its two post offices. That’s certainly going to fall within Nassau county.\n\n\nCode\nresult = geocoder.geocode(\"11710\", featuretype=\"postalcode\", addressdetails=True)\nresult\n\n\nLocation(Bellmore, Town of Hempstead, Nassau County, 11710, United States, (40.67664607465925, -73.53396529349835, 0.0))\n\n\nWe come up with a smaller list by restricting the columns and dropping duplicates. We also make all zipcodes the same length and replace spaces with 0, which we have to do because of Fisher Island. We then run the geocoder on the resulting postcodes.\n\n\nCode\nny_zip_only_df = ny_zip_codes_df[[\"PHYSICAL CITY\", \"LOCALE NAME\", \"DELIVERY ZIPCODE\", \"PHYSICAL ZIP\"]].drop_duplicates()\nny_zip_only_df[\"postalcode\"] = ny_zip_only_df[\"PHYSICAL ZIP\"].apply(lambda x: str(int(x)).rjust(5, \"0\"))\nny_zip_only_df[\"geocode\"] = ny_zip_only_df[\"postalcode\"].apply(lambda x: geocoder.geocode(query={\"postalcode\": x}))\n\n\n\nAn Interlude - The Sorrows and Joys of Open Data\nThe surprising thing (perhaps) is that we are missing a fair amount of data. Take one example, for Niobe NY. There wasn’t a zipcode associated with the data in Open Street Map (I’ve added one!). Open Street Map relies on public “donations” of data, and it seems that the good people of Niobe may not be aware of the need. We are fortunate that Long Island is very well supported in Open Street Map. If we were looking at a less fortunate area, we might have to invest in a commercial geocoder.\n\n\nCode\nny_zip_only_df[ny_zip_only_df.geocode.isnull()]\n\n\n\n\n\n\n\n\n\nPHYSICAL CITY\nLOCALE NAME\nDELIVERY ZIPCODE\nPHYSICAL ZIP\npostalcode\ngeocode\n\n\n\n\n3936\nMAHOPAC FALLS\nMAHOPAC FALLS\n10542\n10542\n10542\nNone\n\n\n3938\nMARYKNOLL\nMARYKNOLL\n10545\n10545\n10545\nNone\n\n\n3965\nSHENOROCK\nSHENOROCK\n10587\n10587\n10587\nNone\n\n\n4039\nNEW MILFORD\nNEW MILFORD\n10959\n10959\n10959\nNone\n\n\n4202\nBROOKLYN\nOZONE PARK CARRIER ANNEX\n11416\n11256\n11256\nNone\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n5888\nNIOBE\nNIOBE\n14758\n14758\n14758\nNone\n\n\n5899\nSAINT BONAVENTURE\nSAINT BONAVENTURE\n14778\n14778\n14778\nNone\n\n\n5906\nWEST CLARKSVILLE\nWEST CLARKSVILLE\n14786\n14786\n14786\nNone\n\n\n5939\nCOOPERS PLAINS\nCOOPERS PLAINS\n14827\n14827\n14827\nNone\n\n\n5960\nKANONA\nKANONA\n14856\n14856\n14856\nNone\n\n\n\n\n77 rows × 6 columns\n\n\n\nFor now, we drop any records that were not geocoded successfully and apply a function to the rest to get a 2-dimensional point.\n\n\nCode\nfrom shapely.geometry import Point\n\nny_zip_geocoded_df = ny_zip_only_df.dropna().copy()\nny_zip_geocoded_df[\"Point\"] = ny_zip_geocoded_df[\"geocode\"].apply(lambda x: Point(x.longitude, x.latitude))\n\n\nWe build a GeoPandas dataframe from the data.\n\n\nCode\nny_zip_geocoded_gdf = gpd.GeoDataFrame(ny_zip_geocoded_df, geometry=ny_zip_geocoded_df[\"Point\"], crs=4326)\n\n\nWith our data in a dataframe, we can plot these zip code positions using Kepler. The picture looks an awful lot like NY!\n\n\nCode\nfrom keplergl import KeplerGl\nny_map = KeplerGl(height=800)\nny_map.add_data(ny_zip_geocoded_gdf[[\"LOCALE NAME\", \"geometry\"]])\nny_map.save_to_html()\nny_map\n\n\nUser Guide: https://docs.kepler.gl/docs/keplergl-jupyter\nMap saved to keplergl_map.html!\n\n\n\n\n\n{html}\n&lt;iframe width=\"800\" height=\"500\" src=\"keplegl_map.html\" title=\"NY Zipcodes\"&gt;&lt;/iframe&gt;\nWe can now do a spatial join between the polygons representing Nassau and Suffolk counties, and the points (longitude and latitude) returned by our geocoder. This operation is written in GeoPandas and is fairly efficient, at least for this relatively small amount of data.\n\n\nCode\nlong_island_zipcodes_df = gpd.sjoin(ny_zip_geocoded_gdf, long_island_gdf, predicate=\"within\")\n\n\nBellmore only has one entry in the list, as we might expect. It is within Nassau County, which is a relief.\n\n\nCode\nlong_island_zipcodes_df[long_island_zipcodes_df[\"PHYSICAL CITY\"]=='BELLMORE']\n\n\n\n\n\n\n\n\n\nPHYSICAL CITY\nLOCALE NAME\nDELIVERY ZIPCODE\nPHYSICAL ZIP\npostalcode\ngeocode\nPoint\ngeometry\nindex_right\nNAME\n...\nPOP2000\nPOP2010\nPOP2020\nDOS_LL\nDOSLL_DATE\nNYC\nCALC_SQ_MI\nDATEMOD\nShape_Leng\nShape_Area\n\n\n\n\n4290\nBELLMORE\nBELLMORE\n11710\n11710\n11710\n(Bellmore, Town of Hempstead, Nassau County, 1...\nPOINT (-73.53396529349835 40.67664607465925)\nPOINT (-73.53397 40.67665)\n29\nNassau\n...\n1334544\n1339532\n1395774\nNaN\nNaN\nN\n446.637468\n2018-04-12\n168031.844843\n1.156786e+09\n\n\n\n\n1 rows × 26 columns\n\n\n\nWe save our list of zipcodes to a file for use in filtering the Federal Election data in our next notebook!\n\n\nCode\nlong_island_zipcodes_df[\"address\"] = long_island_zipcodes_df[\"geocode\"].apply(lambda x: x.address)\nlong_island_zipcodes_df[\"locality\"] = long_island_zipcodes_df[\"address\"].apply(lambda x: x.split(\",\")[0])\nlong_island_zipcodes_df = long_island_zipcodes_df.rename(columns={\"NAME\": \"County\"})\nlong_island_zipcodes_df = long_island_zipcodes_df[[\"County\", \"address\", \"locality\", \"postalcode\", \"PHYSICAL ZIP\", \"Point\"]].drop_duplicates()\nlong_island_zipcodes_gdf = gpd.GeoDataFrame(long_island_zipcodes_df.drop(\"Point\", axis=\"columns\"), geometry=long_island_zipcodes_df[\"Point\"])\nlong_island_zipcodes_gdf.to_file(\"../references/long_island_zipcodes.geojson\", driver=\"GeoJSON\")\n\n\nWe can confirm that the zip codes are on Long Island using Kepler.\n\n\nCode\nfrom keplergl import KeplerGl\nli_zip_map = KeplerGl(height=800)\nli_zip_map.add_data(long_island_zipcodes_gdf)\nli_zip_map\n\n\nUser Guide: https://docs.kepler.gl/docs/keplergl-jupyter",
    "crumbs": [
      "1. Getting Long Island's Zipcodes"
    ]
  },
  {
    "objectID": "notebooks/2.0-daveg-long-island-contributors.html",
    "href": "notebooks/2.0-daveg-long-island-contributors.html",
    "title": "Processing Large Files",
    "section": "",
    "text": "We now have a list of Long Island zipcodes, and we can use it to make sure we are only looking at Long Island data. There’s an awful lot of data, though - 18GB, in 54 separate files. We could read each file separately into Pandas data frames, and then filter them to the Long Island zipcodes. But, there is a better way! We can use Polars, a new dataframe library built on Rust for speed and performance. We rely on some neat features along the way to write less code and get more for it.\n\n\nCode\nimport polars as pl\n\n\nWe use the header file description from the FEC to figure out the columns and their order. This lets us see, for instance, that STATE is column 10 and ZIP_CODE is column 11.\n\n\nCode\nheader_columns = \"\"\"CMTE_ID,AMNDT_IND,RPT_TP,TRANSACTION_PGI,IMAGE_NUM,TRANSACTION_TP,ENTITY_TP,NAME,CITY,STATE,ZIP_CODE,EMPLOYER,OCCUPATION,TRANSACTION_DT,TRANSACTION_AMT,OTHER_ID,TRAN_ID,FILE_NUM,MEMO_CD,MEMO_TEXT,SUB_ID\n\"\"\".split(\",\")\nfor i, c in enumerate(header_columns):\n    print(i+1, c)\n\n\n1 CMTE_ID\n2 AMNDT_IND\n3 RPT_TP\n4 TRANSACTION_PGI\n5 IMAGE_NUM\n6 TRANSACTION_TP\n7 ENTITY_TP\n8 NAME\n9 CITY\n10 STATE\n11 ZIP_CODE\n12 EMPLOYER\n13 OCCUPATION\n14 TRANSACTION_DT\n15 TRANSACTION_AMT\n16 OTHER_ID\n17 TRAN_ID\n18 FILE_NUM\n19 MEMO_CD\n20 MEMO_TEXT\n21 SUB_ID\n\n\n\nWe load the list of zipcodes we created in our last notebook.\n\n\nCode\nimport geopandas as gpd\nli_zip_codes = gpd.read_file(\"../references/long_island_zipcodes.geojson\")\nzip_codes = li_zip_codes.postalcode.unique().tolist()\n\n\nUnfortunately, we can’t just apply our header columns to the data. As we might expect from such a large set of data, some of it is a mess. Surprises I found while trying to process the data:\n\nNon-US zipcodes like ‘W11 3LN’. This is a postal code in England (!!!!!)\nBad tranaction_dt ‘LINCOLN’\nRecords missing some of the required columns\n\nThat last one is the most serious because, if we provide a list of columns to polars, it forces every record to have the same number of fields and fails when that’s not true. But, we can refer to the columns by their positions instead, treat every column as utf8, and then apply filters to the data to make sure we only get the zipcodes we want. We also tell polars to scan the data in chunks, rather than try to read the entire file into RAM. This code is unbelievably performant - it scanned 18GB of data from my machine in just over a minute.\n\n\nCode\nfec_df = pl.scan_csv(\n    \"../data/raw/by_date/*.txt\", \n    separator='|', \n    has_header=False, \n    infer_schema_length=0,\n    ignore_errors=True,\n    missing_utf8_is_empty_string=True,\n).filter(pl.col(\"column_10\") == \"NY\").filter(pl.col(\"column_11\").str.slice(0,5).is_in(zip_codes)).collect(streaming=True)\n\n\nSTREAMING CHUNK SIZE: 2380 rows\n\n\nNow that we have a subset of the data, we can apply our header column to it so we can get the names we want to work with, which were taken from here:\nhttps://www.fec.gov/campaign-finance-data/contributions-individuals-file-description/\n\n\nCode\nfec_df.columns = header_columns\n\n\nWe can then write the file to parquet, which will let us use it with Pandas in our next notebook.\n\n\nCode\nfec_df.write_parquet(\"../data/processed/individual_2020_li.parquet\")",
    "crumbs": [
      "2. Finding Long Island Contributors"
    ]
  },
  {
    "objectID": "notebooks/3.0-daveg-long-island-contributions.html",
    "href": "notebooks/3.0-daveg-long-island-contributions.html",
    "title": "Long Island Political Contributions",
    "section": "",
    "text": "Code\nimport pandas as pd\n\n\n\n\nCode\ndf = pd.read_parquet(\"../data/processed/individual_2020_li.parquet\")\n\n\n\n\nCode\ndf.ZIP_CODE.apply(lambda x: len(x)).value_counts()\n\n\nZIP_CODE\n9    638797\n5    320611\nName: count, dtype: int64\n\n\n\n\nCode\nimport geopandas as gpd\nzipcodes_gdf = gpd.read_file(\"../references/long_island_zipcodes.geojson\")\n\n\n\n\nCode\ndf[\"postalcode\"] = df.ZIP_CODE.str[:5]\n\n\n\n\nCode\ngeocoded_df = df.merge(zipcodes_gdf[[\"postalcode\", \"geometry\"]])\ngeocoded_gdf = gpd.GeoDataFrame(geocoded_df, geometry = geocoded_df[\"geometry\"], crs=4326)\n\n\n\n\nCode\ngeocoded_gdf.iloc[0]\n\n\nCMTE_ID                                               C00401224\nAMNDT_IND                                                     N\nRPT_TP                                                       MY\nTRANSACTION_PGI                                            None\nIMAGE_NUM                                    201907299154766847\nTRANSACTION_TP                                              24T\nENTITY_TP                                                   IND\nNAME                                            JOINNIDES, ANNE\nCITY                                                      ISLIP\nSTATE                                                        NY\nZIP_CODE                                                  11751\nEMPLOYER                                           NOT EMPLOYED\nOCCUPATION                                         NOT EMPLOYED\nTRANSACTION_DT                                         02282019\nTRANSACTION_AMT                                              25\nOTHER_ID                                              C00000935\nTRAN_ID                                        SA11AI_148873367\nFILE_NUM                                                1344765\nMEMO_CD                                                    None\nMEMO_TEXT                        EARMARKED FOR DCCC (C00000935)\nSUB_ID\\n                                    4082820191123930578\npostalcode                                                11751\ngeometry           POINT (-73.21423554326255 40.73608667467182)\nTransactionAmt                                             25.0\nName: 0, dtype: object\n\n\n\n\nCode\ngeocoded_gdf[\"TransactionAmt\"] = geocoded_gdf[\"TRANSACTION_AMT\"].astype(float)\n\n\n8&Be careful, this one can take a while! about a minute9&1\n\n\nCode\nimport geopandas as gpd\ntowns_gdf = gpd.read_file(\"../references/shapefiles/Cities_Towns.shp\").to_crs(4326)\n\n\n\n\nCode\ngeocoded_gdf\n\n\n\n\n\n\n\n\n\nCMTE_ID\nAMNDT_IND\nRPT_TP\nTRANSACTION_PGI\nIMAGE_NUM\nTRANSACTION_TP\nENTITY_TP\nNAME\nCITY\nSTATE\n...\nTRANSACTION_DT\nTRANSACTION_AMT\nOTHER_ID\nTRAN_ID\nFILE_NUM\nMEMO_CD\nMEMO_TEXT\nSUB_ID\\n\npostalcode\ngeometry\n\n\n\n\n0\nC00401224\nN\nMY\nNone\n201907299154766847\n24T\nIND\nJOINNIDES, ANNE\nISLIP\nNY\n...\n02282019\n25\nC00000935\nSA11AI_148873367\n1344765\nNone\nEARMARKED FOR DCCC (C00000935)\n4082820191123930578\n11751\nPOINT (-73.21424 40.73609)\n\n\n1\nC00401224\nN\nMY\nNone\n201907299154766847\n24T\nIND\nJOINNIDES, ANNE\nISLIP\nNY\n...\n03062019\n15\nC00000935\nSA11AI_149487838\n1344765\nNone\nEARMARKED FOR DCCC (C00000935)\n4082820191123930579\n11751\nPOINT (-73.21424 40.73609)\n\n\n2\nC00401224\nN\nMY\nNone\n201907299154766848\n24T\nIND\nJOINNIDES, ANNE\nISLIP\nNY\n...\n03292019\n25\nC00000935\nSA11AI_152069691\n1344765\nNone\nEARMARKED FOR DCCC (C00000935)\n4082820191123930581\n11751\nPOINT (-73.21424 40.73609)\n\n\n3\nC00401224\nN\nMY\nNone\n201907299154766848\n24T\nIND\nJOINNIDES, ANNE\nISLIP\nNY\n...\n04062019\n15\nC00000935\nSA11AI_153371061\n1344765\nNone\nEARMARKED FOR DCCC (C00000935)\n4082820191123930582\n11751\nPOINT (-73.21424 40.73609)\n\n\n4\nC00401224\nN\nMY\nNone\n201907299154766845\n24T\nIND\nJOINNIDES, ANNE\nISLIP\nNY\n...\n01062019\n15\nC00000935\nSA11AI_144624917\n1344765\nNone\nEARMARKED FOR DCCC (C00000935)\n4082820191123930573\n11751\nPOINT (-73.21424 40.73609)\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n959403\nC00401224\nN\n30G\nNone\n202012049357342196\n24T\nIND\nPALMER, MARK\nUPTON\nNY\n...\n10292020\n25\nC00633248\nSA11AI_340221550\n1481637\nNone\nEARMARKED FOR 314 ACTION FUND (C00633248)\n4010420212000914015\n11973\nPOINT (-72.88065 40.86329)\n\n\n959404\nC00010603\nA\nYE\nG2020\n202101319424605549\n15E\nIND\nTUOZZOLO, JOSEPH\nUPTON\nNY\n...\n12132020\n1000\nC00401224\n38479029\n1497317\nNone\n* EARMARKED CONTRIBUTION: SEE BELOW\n4020320212017767423\n11973\nPOINT (-72.88065 40.86329)\n\n\n959405\nC00401224\nN\nYE\nNone\n202101319420539586\n24T\nIND\nPALMER, MARK\nUPTON\nNY\n...\n12112020\n25\nC00633248\nSA11AI_360564543\n1496802\nNone\nEARMARKED FOR 314 ACTION FUND (C00633248)\n4031120211249865804\n11973\nPOINT (-72.88065 40.86329)\n\n\n959406\nC00633248\nA\nYE\nP\n202104129443235174\n15E\nIND\nPALMER, MARK\nUPTON\nNY\n...\n12112020\n25\nNone\nVNW44JXGSD3\n1509550\nNone\n* EARMARKED CONTRIBUTION: SEE BELOW\n4041520211277566112\n11973\nPOINT (-72.88065 40.86329)\n\n\n959407\nC00401224\nN\nYE\nNone\n202101319421163715\n24T\nIND\nTUOZZOLO, JOSEPH\nUPTON\nNY\n...\n12122020\n1000\nC00010603\nSA11AI_360743939\n1496802\nNone\nEARMARKED FOR DEMOCRATIC NATIONAL COMMITTEE (C...\n4031120211250106074\n11973\nPOINT (-72.88065 40.86329)\n\n\n\n\n959408 rows × 23 columns\n\n\n\n\n\nCode\ntown_data = gpd.sjoin(geocoded_gdf, towns_gdf, predicate=\"within\")\n\n\n\n\nCode\ntown_spending = town_data.groupby(\"NAME_right\")[\"TransactionAmt\"].sum().reset_index().rename(columns={\"NAME_right\": \"NAME\"})\ntown_spending\n\n\n\n\n\n\n\n\n\nNAME\nTransactionAmt\n\n\n\n\n0\nBabylon\n2326575.0\n\n\n1\nBrookhaven\n15012779.0\n\n\n2\nEast Hampton\n5758347.0\n\n\n3\nGlen Cove\n806447.0\n\n\n4\nHempstead\n17534222.0\n\n\n5\nHuntington\n9105101.0\n\n\n6\nIslip\n5147893.0\n\n\n7\nLong Beach\n1016479.0\n\n\n8\nNorth Hempstead\n16045870.0\n\n\n9\nOyster Bay\n16843158.0\n\n\n10\nRiverhead\n854291.0\n\n\n11\nShelter Island\n586487.0\n\n\n12\nSmithtown\n4934955.0\n\n\n13\nSouthampton\n10676871.0\n\n\n14\nSouthold\n3479837.0\n\n\n\n\n\n\n\n\n\nCode\nfrom keplergl import KeplerGl\ntown_spending_map = KeplerGl(height=800)\ntown_spending_map.add_data(towns_gdf.merge(town_spending)[[\"NAME\", \"TransactionAmt\", \"geometry\"]], name=\"Town\")\ntown_spending_map\n\n\nUser Guide: https://docs.kepler.gl/docs/keplergl-jupyter\n\n\n\n\n\n\n\nCode\nfrom keplergl import KeplerGl\ncounty_map = KeplerGl(height=800)\ncounty_map.add_data(towns_gdf[towns_gdf.COUNTY=='Nassau'])\ncounty_map\n\n\nUser Guide: https://docs.kepler.gl/docs/keplergl-jupyter\n\n\n/Users/davidgallagher/Code/src/github.com/oneextrafact/pydata-federal-contributions/.venv/lib/python3.10/site-packages/jupyter_client/session.py:719: UserWarning: Message serialization failed with:\nOut of range float values are not JSON compliant\nSupporting this message is deprecated in jupyter-client 7, please make sure your message is JSON-compliant\n  content = self.pack(content)\n\n\n\n\n\n\n\nCode\nvillages_gdf = gpd.read_file(\"../references/shapefiles/Villages.shp\")\nvillages_gdf\n\n\n\n\n\n\n\n\n\nNAME\nTOWN\nCOUNTY\nGNIS_ID\nFIPS_CODE\nSWIS\nPOP1990\nPOP2000\nPOP2010\nPOP2020\nDOS_LL\nDOSLL_DATE\nMAP_SYMBOL\nCALC_SQ_MI\nDATEMOD\nShape_Leng\nShape_Area\ngeometry\n\n\n\n\n0\nAdams\nAdams\nJefferson\n2391499\n360450021000199\n222001\n1753\n1624\n1775\n1633\n1-2005\n2005-04-25\n1\n1.449596\n2018-11-05\n10475.019960\n3.754438e+06\nPOLYGON ((418500.196 4852516.977, 418496.081 4...\n\n\n1\nAddison\nAddison\nSteuben\n2391500\n361010028700276\n462001\n1842\n1797\n1763\n1561\nNaN\nNaN\n1\n1.930132\n2018-02-28\n12848.275937\n4.999019e+06\nPOLYGON ((316042.520 4665479.385, 316052.468 4...\n\n\n2\nAfton\nAfton\nChenango\n2391501\n360170035300342\n082001\n838\n836\n822\n794\nNaN\nNaN\n1\n1.629228\n2018-10-02\n8343.865424\n4.219682e+06\nPOLYGON ((457500.805 4676527.052, 457530.173 4...\n\n\n3\nAirmont\nRamapo\nRockland\n2391502\n360876051000408\n392621\n1770\n7799\n8628\n10166\nNaN\nNaN\n3\n4.563626\n2019-10-04\n15615.663926\n1.181974e+07\nPOLYGON ((578157.706 4550468.971, 578180.609 4...\n\n\n4\nAkron\nNewstead\nErie\n2391503\n360295071600441\n145601\n2906\n3085\n2868\n2888\nNaN\nNaN\n1\n1.927304\n2021-07-15\n18609.811738\n4.991694e+06\nPOLYGON ((214625.772 4770075.179, 214615.018 4...\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n528\nWoodsburgh\nHempstead\nNassau\n2391226\n360593400082986\n282037\n1190\n831\n778\n897\nNaN\nNaN\n3\n0.418232\n2021-08-17\n5764.042194\n1.083215e+06\nPOLYGON ((609360.730 4498013.340, 609389.690 4...\n\n\n529\nWurtsboro\nMamakating\nSullivan\n2391227\n361054480983272\n484003\n1048\n1234\n1246\n1124\nNaN\nNaN\n1\n1.249751\n2018-11-21\n7245.240267\n3.236841e+06\nPOLYGON ((544154.400 4603004.506, 543317.492 4...\n\n\n530\nWyoming\nMiddlebury\nWyoming\n2391228\n361214687783371\n563801\n478\n513\n434\n377\nNaN\nNaN\n1\n0.670962\n2018-09-20\n5338.545696\n1.737785e+06\nPOLYGON ((248331.232 4745306.070, 248023.215 4...\n\n\n531\nYorkville\nWhitestown\nOneida\n2391229\n360658175484099\n307005\n2972\n2675\n2689\n2657\nNaN\nNaN\n2\n0.678641\n2020-07-15\n6867.765567\n1.757671e+06\nPOLYGON ((477128.834 4773116.032, 477134.314 4...\n\n\n532\nYoungstown\nPorter\nNiagara\n2391230\n360635926784143\n293401\n2075\n1957\n1935\n1859\nNaN\nNaN\n1\n1.082342\nNaN\n7812.796682\n2.803253e+06\nPOLYGON ((172794.589 4796912.459, 172765.817 4...\n\n\n\n\n533 rows × 18 columns\n\n\n\n\n\nCode\nvillage_map = KeplerGl(height=800)\nvillage_map.add_data(villages_gdf[villages_gdf.COUNTY=='Nassau'][[\"NAME\", \"TOWN\", \"geometry\"]])\nvillage_map\n\n\nUser Guide: https://docs.kepler.gl/docs/keplergl-jupyter\n\n\n\n\n\n\n\nCode\ndf[\"EMPLOYER\"].value_counts().head(20)\n\n\nEMPLOYER\nRETIRED                             223831\nNOT EMPLOYED                        200383\nSELF-EMPLOYED                        37976\nSELF                                 34942\nNONE                                 34203\nN/A                                  27777\nSELF EMPLOYED                        13506\nINFORMATION REQUESTED                 4305\nFEDERAL AVIATION ADMINISTRATION       3624\nSTONY BROOK UNIVERSITY                2868\nNORTHWELL HEALTH                      2573\nHOMEMAKER                             2312\nPAGNY                                 2105\nPRP RESTAURANT INC                    1698\nHAMBURGER WOOLEN CO, INC              1489\nSUFFOLK COUNTY COMMUNITY COLLEGE      1383\nUSPS                                  1204\nFEDEX                                 1184\nNEW YORK LIFE INSURANCE COMPANY       1166\nSYOSSET T A                           1088\nName: count, dtype: int64\n\n\n\n\nCode\nbellmore_df = df[df.column_11==\"11710\"].copy()\n\n\n\n\nCode\ncommittees_df = pd.read_csv(\"../references/committee_summary_2020.csv\")\ncommittees_df\n\n\n\n\n\n\n\n\n\nLink_Image\nCMTE_ID\nCMTE_NM\nCMTE_TP\nCMTE_DSGN\nCMTE_FILING_FREQ\nCMTE_ST1\nCMTE_ST2\nCMTE_CITY\nCMTE_ST\n...\nITEM_CONVN_EXP_DISB\nITEM_OTHER_DISB\nSUBTTL_CONVN_EXP_DISB\nTTL_EXP_SUBJECT_LIMITS\nUNITEM_CONVN_EXP_DISB\nUNITEM_OTHER_DISB\nTTL_COMMUNICATION_COST\nCOH_BOY\nCOH_COY\nORG_TP\n\n\n\n\n0\nhttps://www.fec.gov/data/committee/C00729137/?...\nC00729137\nFRIENDS OF ERIC MOYER\nH\nP\nQ\n1951 WOODBRIAR DR\nNaN\nKETTERING\nOH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nhttps://www.fec.gov/data/committee/C00659813/?...\nC00659813\nCATHERINE KRANTZ FOR CONGRESS\nH\nP\nT\n314A WEST LENNON DR. #191\nNaN\nEMORY\nTX\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nhttps://www.fec.gov/data/committee/C00647180/?...\nC00647180\nFLORIDA FIRST, FLORIDA FOREVER\nO\nU\nT\n610 S. BOULEVARD\nNaN\nTAMPA\nFL\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nhttps://www.fec.gov/data/committee/C00711648/?...\nC00711648\nBLACK TECH MATTERS\nN\nU\nQ\n435 21ST STREET NE\nNaN\nWASHINGTON\nDC\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nhttps://www.fec.gov/data/committee/C00611962/?...\nC00611962\nTURNER VICTORY FUND\nN\nJ\nQ\n824 S MILLEDGE AVE STE 101\nNaN\nATHENS\nGA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n13541\nhttps://www.fec.gov/data/committee/C00699306/?...\nC00699306\nDEMOCROC\nN\nU\nQ\n26895 ALISO CREEK RD SUITE B-282\nNaN\nALISO VIEJO\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13542\nhttps://www.fec.gov/data/committee/C00699314/?...\nC00699314\nASIAN AMERICANS RISING\nV\nU\nQ\n220 NEWPORT CENTER DR #11-173\nNaN\nNEWPORT BEACH\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13543\nhttps://www.fec.gov/data/committee/C00699819/?...\nC00699819\nPOLICE OFFICERS SUPPORT FUND PAC\nO\nU\nT\n7901 4TH ST. N, STE 4072\nNaN\nST. PETERSBURG\nFL\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13544\nhttps://www.fec.gov/data/committee/C00701797/?...\nC00701797\nEQUALITY CALIFORNIA VOTES\nO\nU\nM\n515 S. FIGUEROA ST., STE. 1110\nNaN\nLOS ANGELES\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13545\nhttps://www.fec.gov/data/committee/C00703082/?...\nC00703082\nARTISTS UNITED FOR CHANGE\nO\nU\nQ\n545 EAST TOWN ST\nNaN\nCOLUMBUS\nOH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n13546 rows × 92 columns\n\n\n\n\n\nCode\ncommittees_df\n\n\n\n\n\n\n\n\n\nLink_Image\nCMTE_ID\nCMTE_NM\nCMTE_TP\nCMTE_DSGN\nCMTE_FILING_FREQ\nCMTE_ST1\nCMTE_ST2\nCMTE_CITY\nCMTE_ST\n...\nITEM_CONVN_EXP_DISB\nITEM_OTHER_DISB\nSUBTTL_CONVN_EXP_DISB\nTTL_EXP_SUBJECT_LIMITS\nUNITEM_CONVN_EXP_DISB\nUNITEM_OTHER_DISB\nTTL_COMMUNICATION_COST\nCOH_BOY\nCOH_COY\nORG_TP\n\n\n\n\n0\nhttps://www.fec.gov/data/committee/C00729137/?...\nC00729137\nFRIENDS OF ERIC MOYER\nH\nP\nQ\n1951 WOODBRIAR DR\nNaN\nKETTERING\nOH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n1\nhttps://www.fec.gov/data/committee/C00659813/?...\nC00659813\nCATHERINE KRANTZ FOR CONGRESS\nH\nP\nT\n314A WEST LENNON DR. #191\nNaN\nEMORY\nTX\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n2\nhttps://www.fec.gov/data/committee/C00647180/?...\nC00647180\nFLORIDA FIRST, FLORIDA FOREVER\nO\nU\nT\n610 S. BOULEVARD\nNaN\nTAMPA\nFL\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n3\nhttps://www.fec.gov/data/committee/C00711648/?...\nC00711648\nBLACK TECH MATTERS\nN\nU\nQ\n435 21ST STREET NE\nNaN\nWASHINGTON\nDC\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n4\nhttps://www.fec.gov/data/committee/C00611962/?...\nC00611962\nTURNER VICTORY FUND\nN\nJ\nQ\n824 S MILLEDGE AVE STE 101\nNaN\nATHENS\nGA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n13541\nhttps://www.fec.gov/data/committee/C00699306/?...\nC00699306\nDEMOCROC\nN\nU\nQ\n26895 ALISO CREEK RD SUITE B-282\nNaN\nALISO VIEJO\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13542\nhttps://www.fec.gov/data/committee/C00699314/?...\nC00699314\nASIAN AMERICANS RISING\nV\nU\nQ\n220 NEWPORT CENTER DR #11-173\nNaN\nNEWPORT BEACH\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13543\nhttps://www.fec.gov/data/committee/C00699819/?...\nC00699819\nPOLICE OFFICERS SUPPORT FUND PAC\nO\nU\nT\n7901 4TH ST. N, STE 4072\nNaN\nST. PETERSBURG\nFL\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13544\nhttps://www.fec.gov/data/committee/C00701797/?...\nC00701797\nEQUALITY CALIFORNIA VOTES\nO\nU\nM\n515 S. FIGUEROA ST., STE. 1110\nNaN\nLOS ANGELES\nCA\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n13545\nhttps://www.fec.gov/data/committee/C00703082/?...\nC00703082\nARTISTS UNITED FOR CHANGE\nO\nU\nQ\n545 EAST TOWN ST\nNaN\nCOLUMBUS\nOH\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n13546 rows × 92 columns\n\n\n\n\n\nCode\nbellmore_df.merge(committees_df, left_on=[\"column_1\"], right_on=[\"CMTE_ID\"])[[\"CMTE_NM\"]].value_counts()\n\n\nCMTE_NM                                                                                          \nACTBLUE                                                                                              1796\nTRUMP MAKE AMERICA GREAT AGAIN COMMITTEE                                                              160\nDONALD J. TRUMP FOR PRESIDENT, INC.                                                                   112\nPERDUE FOR SENATE                                                                                      89\nNATIONAL ASSOCIATION OF LETTER CARRIERS OF U.S.A. POLITICAL FUND (LETTER CARRIER POLITICAL FUND)       64\nMASON TENDERS DISTRICT COUNCIL OF GREATER NEW YORK & LI PAC                                            50\nWINRED                                                                                                 29\nEMILY'S LIST                                                                                           21\nRETAIL, WHOLESALE & DEPARTMENT STORE UNION COMMITTEE ON POLITICAL EDUCATION (RWDSU COPE)               20\nNRSC                                                                                                   18\nVOICE OF TEACHERS FOR EDUC/CMTE ON POL EDUC OF NY STATE UNTD TEACHERS (VOTE/COPE) OF NYSUT             17\nZELDIN FOR CONGRESS                                                                                    16\nTEAM GRAHAM, INC.                                                                                      15\nCUMMINGS FOR CONGRESS                                                                                   9\nELECT TUMAN                                                                                             8\nLOCAL 32BJ SERVICE EMPLOYEES INTERNATIONAL UNION AMERICAN DREAM POLITICAL ACTION FUND                   8\nSTEVE DAINES FOR MONTANA                                                                                7\nAMY MCGRATH FOR SENATE, INC.                                                                            5\nREPUBLICAN NATIONAL COMMITTEE                                                                           4\nGREAT AMERICA PAC                                                                                       4\nAMERICA FIRST ACTION, INC.                                                                              4\nMCCONNELL SENATE COMMITTEE                                                                              3\nBIDEN FOR PRESIDENT                                                                                     3\nDAN CRENSHAW FOR CONGRESS                                                                               3\nDEMOCRATIC PARTY OF WISCONSIN                                                                           2\nRAISER FOR CONGRESS                                                                                     2\nKANYE 2020                                                                                              2\nREALLY AMERICAN PAC                                                                                     2\n1199 SERVICE EMPLOYEES INT'L UNION FEDERAL POLITICAL ACTION FUND                                        2\nHEALTHCARE ASSOCIATION OF NEW YORK STATE AND ALLIED ASSOCIATIONS' FEDERAL PAC (HANYS FEDERAL PAC)       2\nJO JORGENSEN FOR PRESIDENT                                                                              1\nGARBARINO FOR CONGRESS                                                                                  1\nDSCC                                                                                                    1\nNICOLE FOR NEW YORK                                                                                     1\nSTREICKER FOR CONGRESS, INC.                                                                            1\nDELGADO FOR CONGRESS                                                                                    1\nTHE COMMITTEE TO ELECT ROBBIE GOLDSTEIN                                                                 1\nTHOM TILLIS NC VICTORY COMMITTEE 2020                                                                   1\nNEW YORK STATE PUBLIC EMPLOYEES FEDERATION - COPE                                                       1\nTRUMP VICTORY                                                                                           1\nNEW YORK LIFE INSURANCE COMPANY POLITICAL ACTION COMMITTEE                                              1\nVOTESANE PAC                                                                                            1\nBERNIE 2020                                                                                             1\nWOLF PAC                                                                                                1\nLIPETRI FOR CONGRESS                                                                                    1\nName: count, dtype: int64\n\n\n\n\nCode\ndf.groupby(\"EMPLOYER\").size().sort_values().tail(50)\n\n\nEMPLOYER\nAMERICAN ARBITRATION ASSOCIATION       607\nIRRELEVANT                             610\nWIDGEON MGT CORP                       632\nLVCSD                                  633\nNYPD                                   642\nENDEAVOR AIR                           647\nVERIZON                                647\nGEICO                                  649\nSUFFOLK COUNTY HEALTH SERVICES         656\nCITY OF NEW YORK                       670\nSTATE FARM                             676\nPROGRESSIVE                            680\nSUNY STONY BROOK                       694\nNASSAU COUNTY                          695\nF A OF SUFFOLK CC                      708\nSUFFOLK COUNTY                         733\nCUNY                                   775\nNEC CORPORATION OF AMERICA             781\nNYC DOE                                795\nHOFSTRA UNIVERSITY                     799\nCMD25 APPAREL INC                      823\nNOT-EMPLOYED                           824\nNORTHWELL                              850\nTHE ROSS SCHOOL                        867\nRC FULLER                              890\nNYCDOE                                 954\nISLIP PUBLIC SCHOOLS                   991\nSCIENTURE                             1008\nVERIZON-BELL ATLANTIC NORTH           1035\nSUNY                                  1049\nSYOSSET T A                           1088\nNEW YORK LIFE INSURANCE COMPANY       1166\nFEDEX                                 1184\nUSPS                                  1204\nSUFFOLK COUNTY COMMUNITY COLLEGE      1383\nHAMBURGER WOOLEN CO, INC              1489\nPRP RESTAURANT INC                    1698\nPAGNY                                 2105\nHOMEMAKER                             2312\nNORTHWELL HEALTH                      2573\nSTONY BROOK UNIVERSITY                2866\nFEDERAL AVIATION ADMINISTRATION       3624\nINFORMATION REQUESTED                 4305\nSELF EMPLOYED                        13502\nN/A                                  27776\nNONE                                 34199\nSELF                                 34912\nSELF-EMPLOYED                        37952\nNOT EMPLOYED                        200089\nRETIRED                             223824\ndtype: int64\n\n\n\n\nCode\ndf.groupby(\"OCCUPATION\").size().sort_values().tail(50)\n\n\nOCCUPATION\nCARPENTER                   1425\nINSURANCE                   1455\nMUSICIAN                    1509\nDIRECTOR                    1538\nEDUCATOR                    1543\nCLERK                       1561\nCONSTRUCTION                1569\nUNEMPLOYED                  1652\nDESIGNER                    1729\nSOFTWARE ENGINEER           1730\nDENTIST                     1850\nELECTRICIAN                 1858\nMD                          1881\nARTIST                      1918\nPSYCHOTHERAPIST             1968\nNURSE                       1992\nSELF EMPLOYED               2000\nAUDITOR                     2045\nBUSINESS EXECUTIVE          2160\nCONTRACTOR                  2167\nFINANCE                     2177\nREGISTERED NURSE            2231\nSOCIAL WORKER               2289\nRN                          2564\nSELF-EMPLOYED               2784\nBUSINESS OWNER              2803\nACCOUNTANT                  2891\nPSYCHOLOGIST                3182\nHOMEMAKER                   3193\nCEO                         3260\nAIR TRAFFIC CONTROLLER      3443\nLABORER                     3524\nOWNER                       3792\nEXECUTIVE                   3953\nCPA                         4039\nREAL ESTATE                 5143\nLAWYER                      5235\nENGINEER                    5437\nMANAGER                     5459\nPRESIDENT                   5564\nPROFESSOR                   6301\nCONSULTANT                  6393\nNONE                        7067\nINFORMATION REQUESTED       7610\nSALES                       8806\nTEACHER                    16928\nPHYSICIAN                  18118\nATTORNEY                   20457\nNOT EMPLOYED              226844\nRETIRED                   246266\ndtype: int64\n\n\n\n\nCode\ndf[df.OCCUPATION.fillna(\"\").str.startswith(\"SOFTWARE\")][\"EMPLOYER\"].value_counts()[:40]\n\n\nEMPLOYER\nROCKIT SOLUTIONS             291\nABI RESEARCH                 241\nSELF EMPLOYED                167\nNOT EMPLOYED                 154\nBROADRIDGE                   120\nVTS                          112\nSELF-EMPLOYED                101\nBLOOMBERG LP                  90\nEPIQ                          84\nGOOGLE                        81\nCLEVER DEVICES                60\nINFORMATION REQUESTED         55\nBLOOMBERG                     39\nJP MORGAN CHASE               36\nANCHOR COMPUTER               35\nNORTHWELL HEALTH              32\nCENTERVIEW PARTNERS LLC       32\nCONTINUITY LOGIC              31\nSELF                          30\nOUTBRAIN INC                  30\nETSY                          30\nMORGAN STANLEY                29\nMICROSOFT                     26\nRATIONAL PATH INC.            26\nSPACEX                        26\nCODICS CORP                   25\nPRISM VISUAL SOFTWARE INC     20\nDRAFT                         20\nVERINT SYSTEMS INC            20\nRATIONAL PATH, INC.           20\nFANDUEL                       19\nFLASHTALKING                  19\nTHOUGHTFUL SYSTEMS            19\nBLACKBERRY                    19\nCAMP SYSTEMS                  19\nFIREEYE, INC                  18\nINFRAGISTICS                  17\nCUSTOM AI SOLUTIONS           17\nALPHABET                      16\nAMEX                          16\nName: count, dtype: int64",
    "crumbs": [
      "3. Analyzing Long Island Contributors"
    ]
  }
]